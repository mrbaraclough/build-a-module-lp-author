# This is a basic workflow to help you get started with Actions, modified by Charles Crary 10 December 2023.

name: build-module
run-name: ${{ github.actor }} triggered a build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Build
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check out module
        uses: actions/checkout@v4

      - name: Run Pester tests
        env:
          INTEGRATION_TEST_PAT: ${{ secrets.INTEGRATION_TEST_PAT }}
        shell: pwsh
        run: |
          Invoke-Pester -PassThru -Path .\Test\Private\*
          Invoke-Pester -PassThru -Path .\Test\Public\*
          $container = New-PesterContainer -Path .\Test\Module\Module.Tests.ps1 -Data @{PersonalAccessToken = ConvertTo-SecureString -String $Env:INTEGRATION_TEST_PAT -AsPlainText -Force}
          Write-Host $container.Data.Keys
          Invoke-Pester -Output Detailed -PassThru -Path .\Test\Module\* -Container $container -Verbose

      - name: Install ModuleBuilder
        shell: pwsh
        run: |
          # Install ModuleBuilder
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module -Name ModuleBuilder -ErrorAction Stop

      - name: Build module
        shell: pwsh
        run: |
          # Invoke ModuleBuildler
          Build-Module -SourcePath .\Source\Rocinante.GitHub.psd1

      - name: Setup Git config
        run: |
          # Setup the user name and email.
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Commit
        run: |
          # Stage, commit and push the updated files
          cd Output
          git add *
          git commit -m "ModuleBuilder output"
          git push origin main
